# SEE THE README.MD FOR ARGUMENT DESCRIPTIONS

- name: "/current_node"
  signal_lambdas:
  - expression: "lambda msg: msg.data == 't1-r1-c1'"
    safety_critical: True
    process_indices: [0,1,2,3,4,5]
    repeat_exec: False
    tags: ["navigation"]
    when_published: False
  - expression: CustomLambda
    file: CustomLambdaExample
    package: sentor
    safety_critical: False
    process_indices: [6,7,8,9,10,11,12,13]
    repeat_exec: False
    tags: ["navigation"]
    when_published: False
  execute:
  - log:
      message: "Navigating away from {}"
      level: warn
      msg_args:
      - "msg.data"
  - action:
      verbose: True
      namespace: "/topological_navigation"
      package: "topological_navigation"
      action_spec: "GotoNodeAction"
      wait: False
      goal_args:
      -  "goal.target = 't1-r1-c2'"
  - reconf:
      verbose: True
      params:
      - namespace: row_detector
        name: position_error_threshold
        value: -1
  - log:
      message: "Row detection disabled"
      level: warn
  - shell:
      verbose: True
      cmd_args:
      - "cowsay"
      - "moo"
  - custom:
      verbose: True
      name: CustomProcess
      file: CustomProcessExample
      package: sentor
      init_args: 
      - "sentor custom process says Hello World! at initialisation"
      run_args: 
      - "sentor custom process says Hello World! at runtime"
  - reconf:
      verbose: True
      params:
      - namespace: row_detector
        name: position_error_threshold
        value: "_default"
  - log:
      message: "Row detection enabled"
      level: info
  - call:
      verbose: True
      service_name: "/sentor/set_safety_tag"
      timeout: 2.0
      service_args:
      -  "req.data = True"
  - log:
      message: "Teleporting the robot"
      level: info
  - call:
      verbose: True
      service_name: "/gazebo/set_model_state"
      timeout: 2.0
      service_args:
      -  "req.model_state.model_name = 'thorvald_ii'"
      -  "req.model_state.pose.position.x = 18.0"
      -  "req.model_state.pose.position.y = -7.0"
      -  "req.model_state.pose.orientation.w = 1.0"
  - sleep:
      verbose: True
      duration: 3.0
  - log:
      message: "Relocalising the robot"
      level: info
  - publish:
      verbose: True
      topic_name: "/initialpose"
      topic_latched: False
      topic_args:
      -  "msg.header.frame_id = '/map'"
      -  "msg.pose.pose.position.x = 18.0"
      -  "msg.pose.pose.position.y = -7.0"
      -  "msg.pose.pose.orientation.w = 1.0"
  timeout: 0.1
  default_notifications: True
  include: True                  


- name: "/gps/fix"
  signal_when:
    condition: "not published"
    timeout: 3.0
    safety_critical: True
    process_indices: [0]
    tags: ["GPS", "400"]
  signal_lambdas:
    - expression: "lambda msg : msg.status.status < 2"
      timeout: 10.0
      safety_critical: True
      process_indices: [1]
      tags: ["GPS", "401"]
  execute:
  - log:
      message: "GPS data not seen for 3 seconds!"
      level: error
  - log:
      message: "GPS status < 2 for 10 seconds. Lost corrections."
      level: error
  default_notifications: False
  include: False 

